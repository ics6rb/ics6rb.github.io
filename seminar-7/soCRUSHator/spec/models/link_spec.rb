# frozen_string_literal: true

require 'rails_helper'

# Что за expect().to receive - см в link_request_spec.

RSpec.describe Link, type: :model do
  # let! отличается от let тем, что версия в ! вызывается перед каждым тестом принудительно,
  # а let ленив и вызывается только в том случае, если явно вызван. Поэтому для генерации
  # записи и проверки того, что slug уникален, нужно использовать let!, иначе перед тестом
  # в БД ничего не попадет.

  let!(:google) { Link.create url: 'https://google.com', slug: 'google' }

  let(:url) { Faker::Internet.url }

  it 'should not create link with duplicated slug' do
    expect(Link.create(url: url, slug: 'google').valid?).to be(false)
  end

  describe 'create_from_link' do
    it 'should not create link with invalid url' do
      expect(Link.create_from_link(Faker::Lorem.word).valid?).to be(false)
    end

    it 'should create link with autogenerated slug' do
      link = Link.create_from_link url
      expect(link.url).to eq(url)
      expect(link.slug).not_to be_empty
    end
  end

  describe 'find_and_increment_clicks' do
    it 'should return nil if link not found' do
      slug = Faker::Lorem.word
      expect(Link).to receive(:find_by).with(slug: slug).and_return(nil)
      expect(Link.find_and_increment_clicks(slug)).to be_nil
    end

    it 'should return link with incremented clicks count' do
      initial_count = google.clicks
      found = Link.find_and_increment_clicks(google.slug)
      expect(found).to eq(google)
      expect(found.clicks).to eq(initial_count + 1)
    end
  end
end
